set test "global_var"
set testpath "$srcdir/$subdir"

# Check each "global" value picks up the right one.
# See GCC PR51410 and Systemtap PR10622
set ::result_string {getdistance value: 60
getspeed value: 6
compare value: 42}

# Only run on make installcheck and uprobes present.
if {! [installtest_p]} { untested "$test"; return }
if {! [uprobes_p]} { untested "$test"; return }

for {set i 0} {$i < [all_compile_flags]} {incr i} {
  set extra_flag [all_compile_flag $i]
  set extra_name [all_compile_flag_name $i]

  # Compile our object files separately, then combine with main.
  set oname "${test}_speed"
  set res [target_compile ${testpath}/${oname}.c ${oname}_${extra_name}.o object "$extra_flag additional_flags=-g"]
  if { $res != "" } {
      verbose "target_compile for ${oname} failed: $res" 2
      fail "unable to compile ${oname} $extra_name"
      continue
  }

  set oname2 "${test}_distance"
  set res [target_compile ${testpath}/${oname2}.c ${oname2}_${extra_name}.o object "$extra_flag additional_flags=-g"]
  if { $res != "" } {
      verbose "target_compile for ${oname2} failed: $res" 2
      fail "unable to compile ${oname2} $extra_name"
      continue
  }

  set mname "${test}_main"
  set res [target_compile "${testpath}/${mname}.c ${oname}_${extra_name}.o ${oname2}_${extra_name}.o" ${mname}_${extra_name} executable "$extra_flag additional_flags=-g"]
  if { $res != "" } {
      verbose "target_compile failed: $res" 2
      fail "unable to compile ${mname} $extra_name"
      continue
  }

  stap_run3 $test-$extra_name $srcdir/$subdir/$test.stp -c ./${mname}_${extra_name}
}
