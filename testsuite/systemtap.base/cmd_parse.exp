if {![installtest_p]} {
    for {set i 0} { $i < 8} {incr i} {
        untested cmd_parse$i
    }
    return
}

# stap -c 'echo "hello world"' -e 'probe begin {}'
spawn stap -c {echo "hello world"} -e {probe begin {}}
expect {
    -timeout 60
    "hello world" {pass "cmd_parse1"}
    timeout {fail "cmd_parse1: unexpected timeout"}
    eof {fail "cmd_parse1: unexpected EOF"}
}
wait

# stap -c 'echo "hello "\"world\"' -e 'probe begin {}'
spawn stap -c {echo "hello "\"world\"} -e {probe begin {}}
expect {
    -timeout 60
    "hello \"world\"" {pass "cmd_parse2"}
    timeout {fail "cmd_parse2: unexpected timeout"}
    eof {fail "cmd_parse2: unexpected EOF"}
}
wait

#stap -c '(a="hello world"; echo $a)' -e 'probe begin {}'
spawn stap -c {(a="hello world"; echo $a)} -e {probe begin {}}
expect {
    -timeout 60
    "hello world" {pass "cmd_parse3"}
    timeout {fail "cmd_parse3: unexpected timeout"}
    eof {fail "cmd_parse3: unexpected EOF"}
}
wait

#stap -c '(a="hello "\"world\"; echo $a)' -e 'probe begin {}'
spawn stap -c {(a="hello "\"world\"; echo $a)} -e {probe begin {}}
expect {
    -timeout 60
    "hello \"world\"" {pass "cmd_parse4"}
    timeout {fail "cmd_parse4: unexpected timeout"}
    eof {fail "cmd_parse4: unexpected EOF"}
}
wait

#stap -c '(a="hello "world; echo $a)' -e 'probe begin {}'
spawn stap -c {(a="hello "world; echo $a)} -e {probe begin {}}
expect {
    -timeout 60
    "hello world" {pass "cmd_parse5"}
    timeout {fail "cmd_parse5: unexpected timeout"}
    eof {fail "cmd_parse5: unexpected EOF"}
}
wait

#stap -c '(((a=42+7)); echo "The answer is $a")' -e 'probe begin {}'
# NB: not  ((a=42+7)) - must not assume bash
spawn stap -c {(a=49; echo "The answer is $a")} -e {probe begin {}}
expect {
    -timeout 60
    "The answer is 49" {pass "cmd_parse6"}
    timeout {fail "cmd_parse6: unexpected timeout"}
    eof {fail "cmd_parse6: unexpected EOF"}
}
wait

#stap -c '(echo "Hello World" 1>&2) > /dev/null' -e 'probe begin {}'
spawn stap -c {(echo "Hello World" 1>&2) > /dev/null} -e {probe begin {}}
expect {
    -timeout 60
    "Hello World" {pass "cmd_parse7"}
    timeout {fail "cmd_parse7: unexpected timeout"}
    eof {fail "cmd_parse7: unexpected EOF"}
}
wait

spawn stap -l {vm.*}
expect {
    -timeout 60
    -re "vm.*" {pass "cmd_parse8"}
    timeout {fail "cmd_parse8: unexpected timeout"}
    eof {fail "cmd_parse8: unexpected EOF"}
}
wait

spawn stap -e {probe begin { printf("%d %s\n", argc, argv[$1]) exit() }} 1
expect {
    -timeout 60
    "1 1" { pass cmd_parse9 }
    timeout { fail "cmd_parse9 timeout" }
    eof { fail "cmd_parse9 eof" }
}
wait

spawn stap -e {probe begin { printf("%d %s\n", argc, argv[$1]) exit() }} 5 a b c d
expect {
    -timeout 60
    "5 d" { pass cmd_parse10 }
    timeout { fail "cmd_parse10 timeout" }
    eof { fail "cmd_parse10 eof" }
}
wait

spawn stap -e {probe begin { printf("%d %s\n", argc, argv[$1]) exit() }} 10 a b c d
expect {
    -timeout 60
    "5 " { pass cmd_parse11 }
    timeout { fail "cmd_parse11 timeout" }
    eof { fail "cmd_parse11 eof" }
}
wait

spawn stap -e {probe begin { printf("%d %s\n", argc, argv[0]) exit() }}
expect {
    -timeout 60
    "0 " { pass cmd_parse12 }
    timeout { fail "cmd_parse12 timeout" }
    eof { fail "cmd_parse12 eof" }
}
wait

spawn stap -L syscall.a*
expect {
    -timeout 60
    -re {(syscall\.a[_a-zA-Z0-9]*(\ [_a-zA-Z0-9\$]+:(string|long|unknown|stats))*\r\n)+} { pass "cmd_parse13" }
    timeout {fail "cmd_parse13: unexpected timeout"}
    eof {fail "cmd_parse13: unexpected EOF"}
}
wait
