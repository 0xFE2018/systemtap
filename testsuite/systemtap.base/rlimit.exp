# rlimit tests

# Unlimited
set test "rlimit unlimited"
if {[catch { exec stap -L "kernel.function(\"*\")"} res ]} {
     fail $test
} else {
     pass $test
}

# Increase AS limit
set test "rlimit AS increase"
if {[catch { exec stap --rlimit-as=1 --rlimit-as=999999999999 -L "kernel.function(\"*\")"} res ]} {
     pass $test
} else {
     fail $test
}

# Realistic AS limit
set test "rlimit AS realistic"
if {[catch { exec stap --rlimit-as=614400000 -L "kernel.function(\"*\")"} res ]} {
     fail $test
} else {
     pass $test
}

# Small AS limit
set test "rlimit AS small"
if {[catch { exec stap --rlimit-as=1 -L "kernel.function(\"*\")"} res ]} {
     pass $test
} else {
     fail $test
}

# Increase CPU limit
set test "rlimit CPU increase"
if {[catch { exec stap --rlimit-cpu=1 --rlimit-cpu=999999999999 -L "kernel.function(\"*\")"} res ]} {
     pass $test
} else {
     fail $test
}

# Realistic CPU limit
set test "rlimit CPU realistic"
if {[catch { exec stap --rlimit-cpu=60 -L "kernel.function(\"*\")"} res ]} {
     fail $test
} else {
     pass $test
}

# Small CPU limit
set test "rlimit CPU small"
if {[catch { exec stap --rlimit-cpu=1 -L "kernel.function(\"*\")"} res ]} {
     pass $test
} else {
     fail $test
}

# Increase NPROC limit
set test "rlimit NPROC increase"
if {[catch { exec stap --rlimit-nproc=1 --rlimit-nproc=999999999999 -L "kernel.function(\"*\")"} res ]} {
     pass $test
} else {
     fail $test
}

# Realistic NPROC limit
set test "rlimit NPROC realistic"
if {[catch { exec stap --rlimit-nproc=20 -L "kernel.function(\"*\")"} res ]} {
     fail $test
} else {
     pass $test
}

# Small NPROC limit
# Did not seem to change functionality

# Increase STACK limit
set test "rlimit STACK increase"
if {[catch { exec stap --rlimit-stack=1 --rlimit-stack=999999999999 -L "kernel.function(\"*\")"} res ]} {
     pass $test
} else {
     fail $test
}

# Realistic STACK limit
set test "rlimit STACK realistic"
if {[catch { exec stap --rlimit-stack=1024000 -L "kernel.function(\"*\")"} res ]} {
     fail $test
} else {
     pass $test
}

# Small STACK limit
set test "rlimit STACK small"
if {[catch { exec stap --rlimit-stack=1 -L "kernel.function(\"*\")"} res ]} {
     pass $test
} else {
     fail $test
}

# Increase FSIZE limit
set test "rlimit FSIZE increase"
if {[catch { exec stap --rlimit-fsize=1 --rlimit-fsize=999999999999 -L "kernel.function(\"*\")"} res ]} {
     pass $test
} else {
     fail $test
}

# Realistic FSIZE limit
set test "rlimit FSIZE realistic"
if {[catch { exec stap --rlimit-fsize=51200000 -L "kernel.function(\"*\")"} res ]} {
     fail $test
} else {
     pass $test
}

# Small FSIZE limit
# Did not seem to change functionality
