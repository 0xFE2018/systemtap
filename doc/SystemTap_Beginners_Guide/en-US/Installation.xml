<?xml version='1.0'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>

	
<section id="using-setup">
  <title>Installation and Setup</title>
  <remark>
    required packages, installation thru yum, repos (?); possibly, a script to install all required packages
  </remark>

  <remark>
    notes in ~/Desktop/SystemTap/aug21chatlog and ~/Desktop/SystemTap/noted_wcohenmeeting 
  </remark>	
<indexterm>
<primary>Installation</primary>
<secondary>Setup and Installation</secondary>
</indexterm>

<indexterm>
<primary>Setup and Installation</primary>
</indexterm>		
  <para> To deploy SystemTap, you need to install the SystemTap packages along
    with the corresponding set of <filename>-devel</filename>,
    <filename>-debuginfo</filename> and <filename>-debuginfo-common</filename>
    packages for your kernel. If your system has multiple kernels installed, and
    you wish to use SystemTap on more than one kernel kernel, you will need to
    install the <filename>-devel</filename> and <filename>-debuginfo</filename>
    packages for <emphasis>each</emphasis> of those kernel versions.
  </para>
		
  <para> These procedures will be discussed in detail in the following sections.
  </para>
		
  <important>
    <title>Important</title> <para>Many users confuse
    <filename>-debuginfo</filename> with <filename>-debug</filename>. Remember
    that the deployment of SystemTap requires the installation of the
    <filename>-debuginfo</filename> package of the kernel, not the
    <filename>-debug</filename> version of the kernel. </para>
  </important>

<section id="installproper">
    <title>Installing SystemTap</title>

    <para>To deploy Systemtap, you will need to to install the following RPMs:
    </para>
<indexterm>
<primary>Installation</primary>
<secondary>systemtap package</secondary>
</indexterm>

<indexterm>
<primary>systemtap package</primary>
</indexterm>


<!-- next 2 indexterms for systemtap-runtime package -->

<indexterm>
<primary>Installation</primary>
<secondary>systemtap-runtime package</secondary>
</indexterm>

<indexterm>
<primary>systemtap-runtime package</primary>
</indexterm>
    <itemizedlist>
      <listitem><para><filename>systemtap</filename></para></listitem>
      <listitem><para><filename>systemtap-runtime</filename></para></listitem>
    </itemizedlist>
	
    <para>Assuming that your system is configured to use Red Hat Network (RHN) or <command>yum</command> is available, these two rpms can be installed with <command>yum install systemtap systemtap-runtime</command>. Note that before you can use SystemTap, you will still need to install the required kernel information RPMs.
    </para>

</section>

<section id="install-kinfo">
    <title>Installing Required Kernel Information RPMs</title>
<indexterm>
<primary>Installation</primary>
<secondary>required packages</secondary>
</indexterm>

<indexterm>
<primary>required packages</primary>
</indexterm>
<indexterm>
	<primary>packages required to run SystemTap</primary>
</indexterm>
<indexterm>
	<primary>RPMs required to run SystemTap</primary>
</indexterm>
<indexterm>
	<primary>Installation</primary>
	<secondary>kernel information packages</secondary>
</indexterm>

<indexterm>
	<primary>kernel information packages</primary>
</indexterm>
    <para> SystemTap needs information about the kernel in order to place instrumentation in it (i.e. probe it). This information also allows SystemTap to generate the code for the instrumentation. This information is contained in the matching <filename>-devel</filename> and <filename>-debuginfo</filename> packages for your kernel. The necessary <filename>-devel</filename> and
      <filename>-debuginfo</filename> packages for the ordinary "vanilla" kernel
      are as follows:
    </para>

    <itemizedlist>
      <listitem><para><filename>kernel-debuginfo</filename></para></listitem>
      <listitem><para><filename>kernel-debuginfo-common</filename></para></listitem>
      <listitem><para><filename>kernel-devel</filename></para></listitem>
    </itemizedlist>

	<para>
	    Likewise, the necessary packages for the PAE kernel would be 
	    <filename>kernel-PAE-debuginfo</filename>, <filename>kernel-PAE-debuginfo-common</filename>,
	    and <filename>kernel-PAE-devel</filename>.
	</para>
		    
<indexterm>
<primary>Installation</primary>
<secondary>kernel version, determining the</secondary>
</indexterm>

<indexterm>
<primary>kernel version, determining the</primary>
</indexterm>

<indexterm>
<primary>determining the kernel version</primary>
</indexterm>
<indexterm>
	<primary>uname -r</primary>
</indexterm>    
    <para> To determine what kernel your system is currently using, use:</para>
		
<screen>
uname -r
</screen>

    <para>For example, if you wish to use SystemTap on kernel version <filename>2.6.18-53.el5</filename> on an i686 machine, then you would need to download and install the following RPMs:
    </para>

    <itemizedlist>
      <listitem><para><filename>kernel-debuginfo-2.6.18-53.1.13.el5.i686.rpm</filename></para></listitem>
      <listitem><para><filename>kernel-debuginfo-common-2.6.18-53.1.13.el5.i686.rpm</filename></para></listitem>
      <listitem><para><filename>kernel-devel-2.6.18-53.1.13.el5.i686.rpm</filename></para></listitem>
    </itemizedlist>

    <important>
      <title>Important</title>
	
      <para>
	The version, variant, and architecture of the <filename>-devel</filename>, <filename>-debuginfo</filename> and <filename>-debuginfo-common</filename> packages must match the kernel you wish to probe with SystemTap <emphasis>exactly</emphasis>.
      </para>
    </important>

<para>
	To help ease your deployment of SystemTap, you can use <xref linkend="stapprep"/>. 
	<xref linkend="stapprep"/> determines the kernel information packages you need to install in order
	to run SystemTap. If you run <xref linkend="stapprep"/> (as an ordinary, non-root user) without 
	any arguments, it will display the kernel information packages required for the 
	<emphasis>loaded</emphasis> kernel. You can also pass a specific kernel version to 
	<xref linkend="stapprep"/>  (e.g. <computeroutput>2.6.18-92.el5</computeroutput>) if you wish 
	to probe a kernel that is not currently loaded.
</para>
<indexterm>
	<primary>Installation</primary>
	<secondary>stapprep.sh</secondary>
</indexterm>

<indexterm>
	<primary>stapprep.sh</primary>
</indexterm>


<!-- next 2 indexterms for installation script -->

<indexterm>
	<primary>Installation</primary>
	<secondary>installation script</secondary>
</indexterm>

<indexterm>
	<primary>installation script</primary>
</indexterm>
<note>
	<title>Note</title>
	<para>Running <xref linkend="stapprep"/> as root will display the required kernel packages <emphasis>and</emphasis> install them as well, provided that <command>yum</command> and <command>yum-utils</command> are configured properly.</para>
	
<para condition="RedHat">
	In order for <command>yum</command> to find and download the required kernel packages, you need to 
	point it to a repository containing those packages. Most required kernel packages can be found at 
	<ulink url="ftp://ftp.redhat.com/pub/redhat/linux/enterprise/"/>; navigate there until you find the 
	appropriate <filename>Debuginfo</filename> directory for your system. Configure 
	<command>yum</command> accordingly by adding a new "debug" <command>yum</command> repository file under <filename>/etc/yum.repos.d</filename> containing the following lines:
</para>

<programlisting condition="RedHat">
[rhel-debuginfo]
name=Red Hat Enterprise Linux $releasever - $basearch - Debug
baseurl=ftp://ftp.redhat.com/pub/redhat/linux/enterprise/$releasever/en/os/$basearch/Debuginfo/
enabled=1
</programlisting>
</note>	
<!--	Running <xref linkend="stapprep"/> without any arguments will display and install the required kernel information packages for the currently loaded kernel. If you wish to probe a kernel other than the one currently loaded, you can pass a specific kernel version as an argument to <xref linkend="stapprep"/>; the script will then install that kernel's corresponding kernel information packages.
</para>	-->
    
<!--    
<para>
	To determine what kernel information RPMs you need to install in order to run SystemTap, run the <xref linkend="stapprep"/>. Running <xref linkend="stapprep"/> without any arguments will display what packages you 
    
    
    
    <para> The script <xref linkend="stapprep"/> can be used by normal users to determine what supporting kernel RPMs need to be installed on the machine to use SystemTap with a particular kernel.  The script run without any arguments detemines the RPMs needed for the currently running kernel. The script can also accept one argument, the output <command>uname -r</command>, to determine the related RPMs required for a kernel that may not be currently running on the machine.
    </para>-->
<indexterm>
<primary>script for installing kernel information packages</primary>
</indexterm>
<formalpara id="stapprep">
<title>stapprep.sh</title>
<para>
<programlisting>
<xi:include parse="text" href="extras/stapprep.sh" xmlns:xi="http://www.w3.org/2001/XInclude" />
</programlisting>
</para>
</formalpara>
<!--
    <para>
	    If the <filename>yum-utils</filename> package is installed and the <command>yum</command> repositories are set up properly, you can run the <xref linkend="stapprep"/> script as root. <xref linkend="stapprep"/> will automatically download and install the required packages via <command>yum</command> and <command>rpm</command> commands (assuming that the kernel you wish to probe is currently loaded).
    </para>-->

<!-- The script assumes the Red Hat Enterprise Linux debuginfo repository,
<filename>rhel-debuginfo</filename>, but this could be changed.  One could
search the /etc/yum.repo.d/ directory for debuginfo repositories -->

<para>
	If you do not have <command>yum</command> and <command>yum-utils</command> installed (and you are unable to install them), you will have to manually download and install the required kernel information packages. To generate the URL from which to download the required packages, use the following script:
</para>	
<indexterm condition="fedora">
<primary>Installation</primary>
<secondary>fedoradebugurl.sh</secondary>
</indexterm>

<indexterm condition="fedora">
<primary>fedoradebugurl.sh</primary>
</indexterm>


<!-- next 2 indexterms for rheldebugurl.sh -->

<indexterm condition="RedHat">
<primary>Installation</primary>
<secondary>rheldebugurl.sh</secondary>
</indexterm>

<indexterm condition="RedHat">
<primary>rheldebugurl.sh</primary>
</indexterm>
<formalpara condition="RedHat">
<title>rheldebugurl.sh</title>
<para>
<programlisting>
<xi:include parse="text" href="extras/rheldebugurl.sh" xmlns:xi="http://www.w3.org/2001/XInclude" />
</programlisting>
</para>
</formalpara>


<formalpara condition="fedora">
<title>fedoradebugurl.sh</title>
<para>
<programlisting>
<xi:include parse="text" href="extras/fedoradebugurl.sh" xmlns:xi="http://www.w3.org/2001/XInclude" />
</programlisting>
</para>
</formalpara>
    <para>
Once you have manually downloaded the required packages to the machine, install the RPMs by running <command>rpm --force -ivh <replaceable>package_names</replaceable></command>.
    </para>
	
  </section>

  <section id="testing">
    <title>Initial Testing</title>
<indexterm>
<primary>Installation</primary>
<secondary>initial testing</secondary>
</indexterm>

<indexterm>
<primary>initial testing</primary>
</indexterm>

<indexterm>
<primary>testing, initial</primary>
</indexterm>	
    <para>If you are currently using the kernel you wish to probe with
      SystemTap, you can immediately test whether the deployment was
      successful. If not, you will need to reboot and load the appropriate
      kernel.
    </para>

    <para>
	    To start the test, run the command <command>stap -v -e 'probe vfs.read {printf("read performed\n"); exit()}'</command>.  This command simply instructs SystemTap 
	    to print <computeroutput>read performed</computeroutput> then exit
	    properly once a virtual file system read is detected. If the SystemTap
	    deployment was successful, you should get output similar to the
	    following:
    </para>
<!--    <para>To start the test, run the command <command>stap -v -e 'probe vfs.read
      {exit()}'</command>. This command simply instructs SystemTap to exit
      properly once a virtual file system read is detected. If the SystemTap
      deployment was successful, you should get output very similar to the
      following:
    </para>-->

<screen>
Pass 1: parsed user script and 45 library script(s) in 340usr/0sys/358real ms.
Pass 2: analyzed script: 1 probe(s), 1 function(s), 0 embed(s), 0 global(s) in 290usr/260sys/568real ms.
Pass 3: translated to C into "/tmp/stapiArgLX/stap_e5886fa50499994e6a87aacdc43cd392_399.c" in 490usr/430sys/938real ms.
Pass 4: compiled C into "stap_e5886fa50499994e6a87aacdc43cd392_399.ko" in 3310usr/430sys/3714real ms.
Pass 5: starting run.
read performed
Pass 5: run completed in 10usr/40sys/73real ms.
</screen>

    <para> The last three lines of the output (i.e. beginning with
    <computeroutput>Pass 5</computeroutput> indicate that SystemTap was able to
    successfully create the instrumentation to probe the kernel, run the
    instrumentation, detect the event being probed (in this case, a virtual file
    system read), and execute a valid handler (print text then close it with no errors).
    </para>

  </section>
</section>
