<?xml version='1.0'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>

	
<section id="using-setup">
  <title>Setup and Installation</title>
  <remark>
    required packages, installation thru yum, repos (?); possibly, a script to install all required packages
  </remark>

  <remark>
    notes in ~/Desktop/SystemTap/aug21chatlog and ~/Desktop/SystemTap/noted_wcohenmeeting 
  </remark>	
		
  <para> To deploy SystemTap, you need to install the SystemTap packages along
    with the corresponding set of <filename>-devel</filename>,
    <filename>-debuginfo</filename> and <filename>-debuginfo-common</filename>
    packages for your kernel. If your system has multiple kernels installed, and
    you wish to use SystemTap on more than one kernel kernel, you will need to
    install the <filename>-devel</filename> and <filename>-debuginfo</filename>
    packages for <emphasis>each</emphasis> of those kernel versions.
  </para>
		
  <para> These procedures will be discussed in detail in the following sections.
  </para>
		
  <important>
    <title>Important</title> <para>Many users confuse
    <filename>-debuginfo</filename> with <filename>-debug</filename>. Remember
    that the deployment of SystemTap requires the installation of the
    <filename>-debuginfo</filename> package of the kernel, not the
    <filename>-debug</filename> version of the kernel. </para>
  </important>

<section id="installproper">
    <title>Installating SystemTap</title>

    <para> For the Systemtap Beginner's Guide the following two SystemTap RPMs
    need to be installed:
    </para>

    <itemizedlist>
      <listitem><para><filename>systemtap</filename></para></listitem>
      <listitem><para><filename>systemtap-runtime</filename></para></listitem>
    </itemizedlist>
	
    <para>Assuming that the computer system has been configured to use Red Hat
      Network (RHN) or <command>yum</command> is available,
      the two rpms can be installed with <command>yum install
      systemtap systemtap-runtime</command>. Before you use SystemTap the
      additional kernel information will need to be installed as described in
      the following section.
    </para>

</section>

<section id="install-kinfo">
    <title>Installing Needed Kernel Information</title>

    <para> SystemTap makes use of the information in additional kernel RPMs to
      determine where to place instrumentation in the kernel and how to generate
      code for the instrumentation. You will need to download and install the
      necessary <filename>-devel</filename> and <filename>-debuginfo</filename>
      packages for your kernel. The necessary <filename>-devel</filename> and
      <filename>-debuginfo</filename> packages for the ordinary "vanilla" kernel
      are as follows:
    </para>

    <itemizedlist>
      <listitem><para><filename>kernel-debuginfo</filename></para></listitem>
      <listitem><para><filename>kernel-debuginfo-common</filename></para></listitem>
      <listitem><para><filename>kernel-devel</filename></para></listitem>
    </itemizedlist>

    <para> To determine what kernel your system is currently using, use:</para>
		
    <screen>
      uname -r
    </screen>

    <para>For example, if you wish to use SystemTap on kernel version
      <filename>2.6.18-53.el5</filename> on an i686 machine,
      then you would need to download and
      install the following RPMs:
    </para>

    <itemizedlist>
      <listitem><para><filename>kernel-debuginfo-2.6.18-53.1.13.el5.i686.rpm</filename></para></listitem>
      <listitem><para><filename>kernel-debuginfo-common-2.6.18-53.1.13.el5.i686.rpm</filename></para></listitem>
      <listitem><para><filename>kernel-devel-2.6.18-53.1.13.el5.i686.rpm</filename></para></listitem>
    </itemizedlist>

    <important>
      <title>Important</title>
	
      <para>
	The version and architecture of the <filename>-devel</filename>,
	<filename>-debuginfo</filename> and
	<filename>-debuginfo-common</filename> packages must match the kernel
	you wish to probe with SystemTap <emphasis>exactly</emphasis>.
      </para>
    </important>

    <para> The script <xref linkend="stapprep"/> can be used by normal users to
	  determine what supporting kernel RPMs need to be installed on the
	  machine to use SystemTap with a particular kernel.  The script run
	  without any arguments detemines the RPMs needed for the currently
	  running kernel. The script can also accept one argument, the output
	  <command>uname -r</command>, to determine the related RPMs required
	  for a kernel that may not be currently running on the machine.
    </para>

    <formalpara id="stapprep">
      <title>stapprep.sh</title>
      <para>
	<programlisting>
	  <xi:include parse="text" href="extras/stapprep.sh" xmlns:xi="http://www.w3.org/2001/XInclude" />
	</programlisting>
      </para>
    </formalpara>

    <para>
      If the yum-utils package is installed on the computer and has access to
      the <command>yum</command> repositories,
      the <command>stapprep.sh</command> script can be run
      by root to download and install the needed kernel packages via
      <command>yum</command> and <command>rpm</command> commands. Thus, the
      system administrator should be able to install the needed RPMs with the
      script on the machine:
    </para>

    <screen>
      ./stapprep.sh
    </screen>
<!-- The script assumes the Red Hat Enterprise Linux debuginfo repository,
<filename>rhel-debuginfo</filename>, but this could be changed.  One could
search the /etc/yum.repo.d/ directory for debuginfo repositories -->

    <para>
	If <command>yum</command> is not available on a Red Hat Enterprise Linux
	5 machine, the following lines of bash script will generate the URL for
	the debuginfo RPM directory:
    </para>

<screen>
pkg=`grep distroverpkg /etc/yum.conf |awk -F= '{print $2}'`
releasever=`rpm -q --qf "%{version}" $pkg`
base=`uname -m`
echo "ftp://ftp.redhat.com/pub/redhat/linux/enterprise/$releasever/en/os/$base"
</screen>

    <para>
      If <command>yum</command> in not available on a Fedora system, the
      following lines of bash script will generate the URL for the location to
      find the needed kernel RPMs:
    </para>

<screen>
echo -n "Enter nvr of kernel-debuginfo (e.g. 2.6.25-14.fc9.x86_64) " ; \
read NVR; \
BASE=`uname -m` ; \
NVR=`echo $NVR | sed s/.$BASE//` ; \
VERSION=`echo $NVR | awk -F- '{print $1}'` ; \
RELEASE=`echo $NVR | awk -F- '{print $2}'` ; \
echo "http://kojipkgs.fedoraproject.org/\
packages/kernel/$VERSION/$RELEASE/$BASE/"
</screen>

    <para>
      The package RPMs can be manually downloaded and copied to the
      machine.  Once you have manually copied the packages to the
      machine, install the RPMs by running <command>rpm --force -ivh
      <replaceable>package_names</replaceable></command>.
    </para>
	
  </section>

  <section id="testing">
    <title>Initial Testing</title>
	
    <para>If you are currently using the kernel you wish to probe with
      SystemTap, you can immediately test whether the deployment was
      successful. If not, you will need to reboot and load the appropriate
      kernel.
    </para>

    <para>To start the test, run the command <command>stap -v -e 'probe vfs.read
      {exit()}'</command>. This command simply instructs SystemTap to exit
      properly once a virtual file system read is detected. If the SystemTap
      deployment was successful, you should get output very similar to the
      following:
    </para>

<screen>
Pass 1: parsed user script and 55 library script(s) in 340usr/10sys/380real ms.
Pass 2: analyzed script: 1 probe(s), 1 function(s), 0 embed(s), 0 global(s) in 280usr/290sys/745real ms.
Pass 3: translated to C into "/tmp/stapS1CuuS/stap_dd516743892b10a24cd36ef327265169_323.c" in 0usr/0sys/0real ms.
Pass 4: compiled C into "stap_dd516743892b10a24cd36ef327265169_323.ko" in 2050usr/220sys/2541real ms.
Pass 5: starting run.
Pass 5: run completed in 40usr/210sys/260real ms.
</screen>

    <para> The last two lines of the output (i.e. beginning with
    <computeroutput>Pass 5</computeroutput> indicate that SystemTap was able to
    successfully create the instrumentation to probe the kernel, run the
    instrumentation, detect the event being probed (in this case, a virtual file
    system read), and close it with no errors.
    </para>

  </section>
</section>
