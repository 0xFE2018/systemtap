2005-07-05  Graydon Hoare  <graydon@redhat.com>

	* elaborate.{h,cxx}: Revert previous changes.
	* tapsets.{h,cxx}: Adapt to verbose as a member of session.
	* elaborate.cxx (alias_expansion_builder::build): Avoid copying
	locals between alias definition and use.
	* testsuite/semok/{twelve,thirteen,fourteen}.stp: New tests.
	* staptree.cxx (probe_alias::printsig): Print equals sign.

2005-07-05  Frank Ch. Eigler  <fche@redhat.com>

	* elaborate.h (systemtap_session): Add more command-line arguments.
	* staptree.h (verbose): Bad global, no donut.
	* elaborate.cxx: Temporarily disable verbose variable access.
	* main.cxx: Support more arguments, build/run passes.  Revamp
	temporary file generation and partial-pass output generation.
	* tapsets.cxx, translate.cxx: Emit just enough extra punctuation
	and fluff to make generated probe pass -Werror.
	* buildrun.cxx, buildrun.h: New files for passes 4/5.  Partial
	support for build pass, nothing on probe execution yet.
	* testsuite/transok/*.stp: Force just -p3, now that -p4/5 exist.
	* Makefile.am, Makefile.in: Corresponding changes.

2005-07-04  Graydon Hoare  <graydon@redhat.com>

	* elaborate.h (symresolution_info::current_derived_probe): New field.
	(symresolution_info::current_probe): Change type.
	* elaborate.cxx (semantic_pass_symbols): Add passes for resolving
	locals in pre-derivation base probes and pre-expansion aliases.
	(symresolution_info::visit_symbol):
	(symresolution_info::find_scalar): Update to match new field.

2005-06-27  Graydon Hoare  <graydon@redhat.com>

	* staptree.{h,cxx} (probe_alias): New structure.
	* parse.{h,cxx} (parser::parse): Parse probes or probe aliases.
	(parser::parse_probe): Likewise.
	* tapsets.{h,cxx}:
	(derived_probe_builder):
	(match_key): 
	(match_node): 
	(alias_derived_probe): Move from here,
	* elaborate.{h,cxx}: to here.
	* elaborate.h (systemtap_session::pattern_root): New member.
	(register_library_aliases): New function.
	* tapsets.cxx: Build one dwarf_derived_probe per target address.

2005-06-23  Graydon Hoare  <graydon@redhat.com>

	* tapsets.cxx 
	(probe_type): New enum.
	(probe_spec): New struct.
	(dwarf_derived_probe): Reorganize a bit, interpret .return.
	(query_statement): Translate addresses back to module space.
	(probe_entry_function_name):
	(probe_entry_struct_kprobe_name):
	(foreach_dwarf_probe_entry):
	(declare_dwarf_kernel_entry):
	(deregister_dwarf_kernel_entry):
	(register_dwarf_kernel_entry):
	(register_dwarf_module):
	(declare_dwarf_module_entry):
	(deregister_dwarf_module_entry):
	(register_dwarf_module_entry): New functions.
	(dwarf_derived_probes::emit_probe_entries): 
	(dwarf_derived_probes::emit_registrations): 
	(dwarf_derived_probes::emit_deregistrations): Implement.

2005-06-21  Frank Ch. Eigler  <fche@redhat.com>

	* config.in, configure: Regenerated.
	* tapsets.cxx: Make dwarf code conditional on new elfutils header.

2005-06-20  Graydon Hoare  <graydon@redhat.com>

	* configure.ac: Scan for libdwfl.
	* staptree.h (verbose): New global.
	* main.cxx (usage, main): Implement -v option.
	* tapsets.cxx (dwflpp): New struct.
	(query_statement): New function.
	(query_function): New function.
	(query_cu): New function.
	(query_module): New function.
	(dwarf_derived_probe): Implement primary forms.

2005-06-14  Graydon Hoare  <graydon@redhat.com>

	* tapsets.h: New file.
	(derived_probe_builder): Callback for making derived probes.
	(match_key): Component of pattern-matching tree.
	(match_node): Other component of pattern-matching tree.	
	* tapsets.cxx: Add pattern-matching system for probes.
	(alias_derived_probe): Skeleton for alias probes.
	(dwarf_derived_probe): Skeleton for dwarf probes.
	(register_standard_tapsets): Registry for standard tapsets.

2005-06-13  Frank Ch. Eigler  <fche@redhat.com>

	Start separating out translator-side probe point recognition.
	* tapsets.cxx: New file.
	(be_derived_probe): Support for begin/end probes.
	(derive_probe): Ditto.  Reject anything unrecognized.
	* translator.cxx: Move out old code.
	* Makefile.am: Add new source file.
	* testsuite/semok/*: Switch to begin/end probes only.

2005-06-08  Frank Ch. Eigler  <fche@redhat.com>

	systemtap/916
	Implement all basic scalar operators, including modify-assignment.
	* parse.cxx (lexer): Allow multi-character lookahead in order to
	scan 1/2/3-character operators.
	(parse_boolean_or/and/xor/shift): New routines.
	* translate.cxx (visit_assignment, visit_binary_expression,
	visit_*_crement): Generally rewrote.
	(visit_*): Added more parentheses in output.
	(emit_module_init): Initialize globals.
	* staptree.h, elaborate.cxx, elaborate.h: Remove exponentiation.
	* main.cxx (main): Add an end-of-line to output file.
	* testsuite/*: Several new tests.

2005-06-05  Frank Ch. Eigler  <fche@elastic.org>

	Implement for/next/continue/break/while statements.
	* staptree.h: Declare new 0-arity statement types.  Tweak for_loop.
	* parse.cxx: Parse them all.
	* translate.cxx (c_unparser): Maintain break/continue label stack.
	(visit_for_loop, *_statement): New implementations.
	* elaborate.*, staptree.cxx: Mechanical changes.
	* testsuite/parseok/ten.stp, semko/twelve.stp, transko/two.stp,
	transok/five.stp: New tests.	

2005-06-03  Frank Ch. Eigler  <fche@elastic.org>

	* elaborate.cxx (find_*): Remove arity checks from here ...
	* staptree.cxx (set_arity): Put arity match assertion here.
	* testsuite/semko/{six,nine}.stp: Confirm logic.
	* testsuite/transko/one.stp: First translation-time ko test.

2005-06-03  Frank Ch. Eigler  <fche@redhat.com>

	* TODO: Removed entries already represented in bugzilla.
	* elaborate.cxx: Rewrite type inference for several operators.
	* main.cxx (main): For -p2 runs, print types of function/probe locals.
	* parse.cxx (scan): Identify more two-character operators.
	(parse_comparison): Support the whole suite.
	* translate.cxx (visit_unary_expression, logical_or_expr,
	logical_and_expr, comparison,ternary_expression): New support.
	* testsuite/parseok/semok.stp: Clever new test.
	* testsuite/transok/four.stp: New test.
	* testsuite/*: Some tweaked tests for syntax changes.

2005-06-03  Frank Ch. Eigler  <fche@redhat.com>

	* parse.cxx (scan): Support C and C++ comment styles.
	* testsuite/parseok/four.stp: Test them some ...
	* testsuite/parseko/nine.stp: ... and some more.

2005-06-02  Frank Ch. Eigler  <fche@redhat.com>

	* translate.cxx (visit_concatenation, visit_binary_expression):
	New basic implementation.
	(*): Reduce emitted whitespace and remove `# LINE "FILE"' lines.

2005-06-02  Frank Ch. Eigler  <fche@redhat.com>

	Parse foreach construct.  Added fuller copyright notices throughout.
	* staptree.h (foreach_loop): New tree node type.
	* staptree.cxx: Print it, visit it, love it, leave it.
	* parse.cxx: Parse it.
	(parse_stmt_block): Don't require ";" separators between statements.
	(parse_array_in): Use [] as index group operator instead of ().
	* elaborate.cxx (visit_foreach_loop): New code.
	* translate.cxx: Slightly tighten errorcount/actioncount handling.
	* main.cxx: Accept "-" as script file name standing for stdin.
	(visit_arrayindex): Switch to simpler set_arity call.
	* configure.ac: Generate DATE macro.
	* Makefile.in, configure, config.in: Regenerated.
	* testsuite/*: New/updated tests for syntax changes, foreach ().

2005-05-30  Frank Ch. Eigler  <fche@redhat.com>
	
	More fully parse & elaborate "expr in array" construct.
	* staptree.h (array_in): Make this unary.  Update .cxx to match.
	* parse.cxx (parse_array_in): Rewrite.
	(parse_symbol_plain): Removed.  Update .h to match.
	* elaborate.cxx (typeresolution_info::visit_array_in): New function.
	(find_array): Tentatively, accept arity=0.
	* translate.cxx (c_unparser::c_assign): New functions to eliminate
	much ugly duplication.  Use throughout.
	(visit_symbol): Correct function formal argument search.
	(c_tmpcounter*::visit): Add missing recursion in several functions.
	* testsuite/*: Add new tests for array-in construct.  Add the
	first "transok" test.
	* Makefile.am: Add transok tests.
	* Makefile.in: Regenerated.

2005-05-26  Frank Ch. Eigler  <fche@redhat.com>

	* translate.cxx: Traverse trees just for common-header generation,
	to emit explicit temp variables into context.  Switch to explicit
	"frame" pointer in generated function/probe bodies.  Initialize
	locals in function bodies.  Rename "test_unparser" to "c_unparser"
	throughout.

2005-05-24  Frank Ch. Eigler  <fche@redhat.com>

	* elaborate.cxx (find_array): Support automagic tapset globals.
	* testsuite/semok/nine.stp: Test it.
	* staptree.cxx (stapfile print): List globals.

2005-05-24  Frank Ch. Eigler  <fche@redhat.com>

	* testsuite/semlib/*: New tapset library chunks for "-I" testing.
	* testsuite/semok/eight.stp, nine.stp: New tests.

2005-05-22  Frank Ch. Eigler  <fche@elastic.org>

	* Makefile.am (gcov): New target to generate test-coverage data from
	a testsuite run.
	* Makefile.in: Regenerated.

2005-05-20  Frank Ch. Eigler  <fche@redhat.com>

	Many changes throughout.  Partial sketch of translation output.
	* elaborate.*: Elaboration pass.
	* translate.*: Translation pass.
	* staptree.*: Simplified for visitor concept.
	* main.cxx: Translator mainline.
	* *test.cxx: Removed.
	* testsuite/*: Some new tests, some changed for newer syntax.

2005-05-05  Frank Ch. Eigler  <fche@redhat.com>

	* parse.cxx (parse): Add helper methods.
	(lexer::scan, parse_assignment): Parse "<<<" operator.  Fix assignment
	associativity.
	(parse_symbol): Permit function with empty arg list.
	(parse_global, parse_statement, parse_functiondecl): Expect
	unconsumed leading keyword.
	(parse_global): Don't use ";" termination.
	* parse.h: Corresponding changes.
	* staptree.cxx (binary_expression::resolve_types): Fix <<<
	type inference.
	(translator_output): Improve pretty-printing.
	(*): Add general visitors to statement/expression types.
	* staptree.h: Corresponding changes.  Tweak symresolution_info fields.
	Add semantic_error class.
	* semtest.cxx: Adapt to this.
	* testsuite/parseok/two.stp, semok/*.stp: Adapt to syntax changes.

2005-03-15  Frank Ch. Eigler  <fche@redhat.com>

	* semtest.cxx: Print probe signatures properly.
	* staptree.cxx (probe::printsig): New function.

2005-03-15  Frank Ch. Eigler  <fche@redhat.com>

	* TODO: New file.  Include some probe-point-provider syntax examples.
	* parse.cxx (lexer::scan, parser::parse_literal): Support hex, octal
	numbers via strtol.
	(parse_probe, parse_probe_point): Modify for dotted syntax.
	* staptree.cxx: Ditto.
	* parsetest.cxx, semtest.cxx: Print parse/sem results even if
	.stp files were given on command line.
	* parse.h, staptree.h: Rename probe_point_spec -> probe_point.
	* runtest.sh: New test-runner front-end script.
	* Makefile.am: Use it for TESTS_ENVIRONMENT.
	* testsuite/*: Update probe point syntax.  Add a bunch of new tests.

2005-03-04  Frank Ch. Eigler  <fche@redhat.com>

	* parse.cxx (scan): Support '$' characters in identifiers.
	(parse_symbol): Support thread-> / process-> shorthand.
	* staptree.cxx (symresolution_info::find): Split up into
	find_scalar, find_array, find_function.
	(resolve_symbols): Call the above for symbol/arrayindex/functioncall.
	(find_scalar): Add stub support for synthetic builtin variables.
	* staptree.h: Corresponding changes.
	* testsuite/*: Some new tests.

2005-03-03  Frank Ch. Eigler  <fche@redhat.com>

	* parse.cxx (parse_assignment): Assert lvalueness of left
	operand.
	* staptree.h (expression): Add is_lvalue member.
	* staptree.cxx (functioncall::resolve_types): Don't crash on
	formal-vs-actual argument count mismatch.
	(*): Add some is_lvalue stub functions. 	
	* testsuite/*: Some new tests.

2005-03-01  Frank Ch. Eigler  <fche@redhat.com>

	* parse.cxx: Implement left-associativity for several types of
	operators.  Add some more statement types.  Parse functions.
	Be able to print tokens.  Simplify error generating functions.
	Save tokens in all parse tree nodes.
	* parse.h: Corresponding changes.
	* staptree.cxx: Move tree-printing functions here.  Add many
	new functions for symbol and type resolution.
	* staptree.h: Corresponding changes.
	* semtest.cxx: New semantic analysis pass & test driver.
	* testsuite/sem*/*: New tests.
	* parsetest.cxx: Separated parse test driver.
	* testsuite/parse*/*: Adapt tests to parsetest driver.
	* Makefile.am: Build semtest.  Run its tests.
	* Makefile.in: Regenerated.

2005-02-11  Frank Ch. Eigler  <fche@redhat.com>

	* parse.cxx, parse.h: New files: parser.
	* staptree.h: New file: semantic object declarations.
	* staptree.cxx: New dummy driver file.

