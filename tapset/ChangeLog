2006-12-11  Li Guanglei <guanglei@cn.ibm.com>

	From Gui Jian <guij@cn.ibm.com>
	* nfs.stp, nfs_proc.stp, rpc.stp: patch for 2.6.9 kernel
	
2006-11-29  Li Guanglei <guanglei@cn.ibm.com>

	From Gui Jian <guij@cn.ibm.com>
	* scheduler.stp, vfs.stp: made idle_balance and 
	buffer_migrate_page optinal.
	
2006-11-20  Frank Ch. Eigler  <fche@elastic.org>

	* context.stp (caller_addr): Declare return type.

2006-11-07  Li Guanglei <guanglei@cn.ibm.com>

	From Gui Jian <guij@cn.ibm.com>
	* signal.stp, memory.stp: make do_mmap2, copy_cow_page
	and signal.handle.return optional since they are obsolete
	or failed to probe on 2.6.18.1/ppc64

2006-11-02  Frank Ch. Eigler  <fche@elastic.org>

	* README: Add a blurb against running these scripts directly.

2006-10-29  Thang Nguyen <thang.p.nguyen@intel.com>

	* context.stp: Added proper handling of statement
	* probe in probefunc() for IA64 (bz# 3423)

2006-10-16  Li Guanglei <guanglei@cn.ibm.com>
	* scsi.stp: check whether rq_disk is empty
	* scheduler.stp: revert changes for x86_64

2006-10-13  Li Guanglei <guanglei@cn.ibm.com>
	* scsi.stp: add some variables
	* scheduler.stp: skip __switch_to on x86_64

2006-10-12  Martin Hunt  <hunt@redhat.com>
	* context.stp (print_backtrace): Pass in new
	kretprobe instance arg.
	(backtrace): Ditto.
	(is_return): Rewrite.
	(stack_size): New.
	(stack_used): New.
	(stack_unused): New.
	(called_addr): New.
	(caller): New.	

2006-10-12  Li Guanglei <guanglei@cn.ibm.com>
	* ioscheduler.stp: bugfix to avoid refer to NULL pointer

2006-10-11  Li Guanglei <guanglei@cn.ibm.com>
	* nfs.stp, nfsd.stp: bugfix of pointer conversion on
	32-bit platform.
	* i686/syscall.stp: make sys_request_key optional since
	it failed to probe on 2.6.18/i386

2006-10-04  Frank Ch. Eigler  <fche@elastic.org>

	* context.stp (probefunc): Return empty string for
	userspace (< PAGE_OFFSET) pointers.

2006-09-26  David Smith  <dsmith@redhat.com>

	* test/run.sh: Changed 'stpd' references to 'staprun'.

2006-09-20  Josh Stone  <joshua.i.stone@intel.com>

	PR 3233
	* timestamp.stp (gettimeofday_ns): New function
	(gettimeofday_us, gettimeofday_ms, gettimeofday_s):
	Use gettimeofday_ns as the base unit.

2006-09-19  Li Guanglei <guanglei@cn.ibm.com>
	
	From Gui Jian <guijian@cn.ibm.com>

	* rpc.stp: Some changes and more comments of RPC tapset

2006-09-18  Martin Hunt  <hunt@redhat.com>

	* logging.stp (stp_print_binary): New function.
	* string.stp: Fix docs.

2006-09-12  Li Guanglei <guanglei@cn.ibm.com>
	
	From Li Xuepeng <xuepengl@cn.ibm.com>

	* nfsd.stp, nfs_proc.stp, nfs.stp: 
	Change NFS file identifier. Change NFS version data type
	from String to INT. Add version variable to nfs_open 
	and nfs_release.
	
2006-09-11  Li Guanglei <guanglei@cn.ibm.com>
	
	From Gui Jian(guijian@cn.ibm.com>
	* rpc.stp: tapsets for RPC activities.
	
2006-08-30  Li Guanglei <guanglei@cn.ibm.com>

	* signal.stp: some changes to arguments and comments 
	of signal tapset
	
2006-08-25  Li Guanglei <guanglei@cn.ibm.com>

	From Li Xuepeng:
	* vfs.stp,nfsd.stp,nfs.stp: bug fixes and more error checking
	
2006-08-23  Li Guanglei <guanglei@cn.ibm.com>

	* vfs.stp: New tapset from Thomas Zanussi(trz@us.ibm.com) to probe
	vfs layer activities.
	* nfs.stp: New tapset from Li Xuepeng(xuepengl@cn.ibm.com) to probe
	nfs file operations and nfs address space operations on client side.
	* nfs_proc.stp: New tapset from Li Xuepeng to probe some nfs RPC 
	procedure stub functions on client side.
	* nfsd.stp: New tapset from Li Xuepeng to probe nfs server side 
	activities, including some RPC procedure stub functions, nfsd 
	dispatch routine, and nfsd_* functions
	
2006-08-22  Li Guanglei <guanglei@cn.ibm.com>

	* signal.stp: More variables for signal.do_action and
	signal.procmask. New function of get_sigset(). Minor
	changes to naming of signal.pend and its comments

	
2006-08-21  Martin Hunt  <hunt@redhat.com>

	* string.stp (substr): Rewrite. Make the 3rd parameter
	be the length.

2006-08-17  Josh Stone  <joshua.i.stone@intel.com>

	* signal.stp: Changes on behalf of Manoj S Pattabhiraman:
	1. As per the suggestions, i have removed the argstr from the 
	probe points.
	2. Added some checks to find whether the signals generated are 
	USER or Kernel Mode in signal_handle probe.

2006-08-17  Li Guanglei <guanglei@cn.ibm.com>

	* signal.stp: update signal tapsets based on the discussion
	with Josh Stone on mailinglist:
	1. Added "send2queue" and "name" variable for signal.send.part* 
	2. Added signal.send.return probe alias 
	3. Added signal.checkperm and signal.checkperm.return probe alias
	4. Commented out signal.handle_stop
	5. Alias all signal syscalls to syscall tapsets.

2006-08-15  Thang Nguyen  <thang.p.nguyen@intel.com>

	* ioblock.stp:  Added safety checks for __bio_ino() and 
	__bio_start_sect(). 

2006-08-09  Thang Nguyen  <thang.p.nguyen@intel.com>

	* ioblock.stp: Merged io.stp from Tom Zanussi (IBM) into existing
	ioblock.stp.  Removed/Renamed duplicate variables and probes.	

2006-08-09  Josh Stone  <joshua.i.stone@intel.com>

	* signal.stp: Create a new tapset that addresses process signals.
	Much of this was contributed by Manoj Pattabhiraman (IBM).
	* process.stp: Remove aliases that now belong in signal tapset
	* memory.stp: move pagefault to vm.* namespace, and add many other
	virtual-memory themed probes.

2006-08-09  David Smith  <dsmith@redhat.com>

	* syscalls.stp: Fixed typo in syscall.kexec_load argument
	handling.

2006-08-08  Eugene Teo  <eteo@redhat.com>

	* context.stp (probemod): New function.

2006-07-18  Thang Nguyen  <thang.p.nguyen@intel.com>

	* context.stp: Modified probefunc() to print the function
	name (without the dot) for statement probe on ppc64.

2006-07-17  David Smith  <dsmith@redhat.com>

	* context.stp: Removed returnval() function.  Use $return
	instead.
	* return.stp: Removed.  Use $return instead.

2006-07-17  Tom Zanussi <zanussi@us.ibm.com>
	
	* ioblock.stp: add null bi_bdev check to bio_devname()

2006-07-17  Li Guanglei <guanglei@cn.ibm.com>
	
	* syscalls.stp: make sys_acct, sys_add_key, sys_keyctl 
	and sys_modify_ldt optional on ppc64 since they are 
	weak symbol.
	* ppc64/syscalls.stp: remove syscall.acct, syscall.add_key
	and syscall.umask since they are already defined in 
	syscalls.stp
	
2006-07-04  Martin Hunt  <hunt@redhat.com>

	* syscalls.stp, syscalls2.stp: Use user_string_quoted().

2006-07-04  Li Guanglei <guanglei@cn.ibm.com>
	
	* syscalls.stp, syscalls2.stp, ppc64/syscalls.stp: 
	fix syscall.lstat, syscall.lstat64, syscall.newlstat. 
	* ppc64/syscalls.stp: fix syscall.compat_sys_statfs and 
	syscall.sys32_open

2006-07-04  Li Guanglei <guanglei@cn.ibm.com>
	
	* memory.stp: add addr_to_node() from Jose R. Santos
	(jrs@us.ibm.com)
	* syscalls.stp: typo for syscall.lstat

2006-06-30  Martin Hunt  <hunt@redhat.com>

	* conversions.stp (user_string): Don't generate errors
	on faults, just return <unknown>.
	(user_string2): New function.
	(user_string_warn): New function.
	
2006-06-26  Martin Hunt  <hunt@redhat.com>

	* aux_syscalls.stp (_stp_ctime): New function.
	(_struct_utimbuf_u): New function.

2006-06-25  Li Guanglei <guanglei@cn.ibm.com>
	
	* syscalls.stp: Changes to AIO related syscalls(io_setup, 
	io_submit, io_getevents, io_cancel, io_destroy)
	
2006-06-23  Thang Nguyen  <thang.p.nguyen@intel.com>

	* tcp.stp: Refined variables and added more
	function descriptions.
	* udp.stp: UDP tapset.
	* inet_sock.stp: common inet_sock functions
	for TCP and UDP tapsets.

2006-06-22  Thang Nguyen  <thang.p.nguyen@intel.com>

	* tcp.stp: TCP tapset (originally from IBM)

2006-06-21  Josh Stone  <joshua.i.stone@intel.com>

	PR 2525
	* timestamp.stp (gettimeofday_us, gettimeofday_ms, gettimeofday_s):
	Convert to using the runtime-provided _stp_gettimeofday_us().

2006-06-19  Martin Hunt  <hunt@redhat.com>

	* syscalls.stp: Make the 16-bit calls optional.
	* syscalls2.stp: Ditto.

2006-06-09  Martin Hunt  <hunt@redhat.com>

	* syscalls2.stp: Fix sys_sync.

2006-06-09  Martin Hunt  <hunt@redhat.com>

	* syscalls2.stp: Fixed the uid and gid calls.	

2006-06-09  Li Guanglei <guanglei@cn.ibm.com>
	
	* syscalls.stp: made sys_ftruncate64 optional since it doesn't
	exist on 2.6.16*/ppc64

2006-06-08  Thang Nguyen  <thang.p.nguyen@intel.com>

	* ioblock.stp: new (block I/O activities)

2006-06-06  Josh Stone  <joshua.i.stone@intel.com>

	* process.stp (create, exec_complete): replace retval() with $return

2006-06-02  Josh Stone  <joshua.i.stone@intel.com>

	* process.stp (exec, exec_complete): conditionally include
	compat_do_execve for 64-bit kernels
	* process.stp (handle_signal): use optional probes to alternate
	between function or inline

2006-05-30  Martin Hunt  <hunt@redhat.com>

	* aux_syscalls.stp (_mountflags_str): Rewrite.
	(_umountflags_str): New.

	* syscalls.stp (fstatfs.return): Add retstr.

	* syscalls2.stp (sys_write): Use text_strn().
	* syscalls.stp (sys_lseek): Fix.
	(sys_llseek): Fix.
	
	* string.stp (text_str): New.
	(text_strn): New.

2006-05-26  Martin Hunt  <hunt@redhat.com>

	* errno.stp: Add octal option for returnstr.

	* [i686,x86_64]/syscalls.stp (umask): Print args and return
	in octal.
	(add_key): Comment out. This syscall is added by a xen patch
	and may not be present.
	(tux): Ditto.
	
	* syscalls.stp (accept): Fix arg name.

2006-05-25  Martin Hunt  <hunt@redhat.com>

	* syscalls.stp: Add sys_fcntl and sys_listen.

	* syscalls2.stp: Commented out sys_socketcall because it only calls 
	other system calls which are already probed.

2006-05-25  Martin Hunt  <hunt@redhat.com>
	
	* syscall*.stp: Change "0x%p" to "%p".

2006-05-25  Li Guanglei <guanglei@cn.ibm.com>
	
	* scheduler.stp: add prev_task and next_task variable.

2006-05-24  Josh Stone  <joshua.i.stone@intel.com>

	PR 2677
	* context.stp (probefunc): Use _stp_symbol_sprint_basic

2006-05-19  Li Guanglei <guanglei@cn.ibm.com>

	Patch from Mao Bibo (bibo.mao@intel.com)
	* tapset/aux_syscalls.stp: change %lx to %llx in snprintf to
	print the address in IA64

2006-05-19  Li Guanglei <guanglei@cn.ibm.com>

	* tapset/ioscheduler.stp: change . to -> operator to get the
	elevator name
	
2006-05-18  Li Guanglei <guanglei@cn.ibm.com>

	* tapset/LKET/*: tracing tapsets of LKET
	* tapset/context.stp: add stp_pid() func
	* tapset/ppc64/syscalls.stp: add conditional preprocessing
	since sys64_time is removed from kernel >= 2.6.16

2006-05-18  Li Guanglei <guanglei@cn.ibm.com>

	* tapset/tskschedule.stp: deleted, merge into scheduler.stp
	* tapset/scheduler.stp:   incorporate tskschedule.stp
	
2006-05-17  Josh Stone  <joshua.i.stone@intel.com>

	* process.stp: Rename signal.send to signal_send and process.complete
	to process_complete, to allow process.* to work properly.
	* process.stp (_IS_ERR): declare parameter type
	* process.stp (process.create): correct new_pid assignment
	* scheduler.stp: New scheduler tapset

2006-05-18  Li Guanglei <guanglei@cn.ibm.com>

	* tapset/ioscheduler.stp: generic IO scheduler tapsets from LKET
	* tapset/memory.stp:      generic pagefault tapsets from LKET
	* tapset/networking.stp:  generic networking tapsets from LKET
	* tapset/scsi.stp:        generic scsi tapsets from LKET
	* tapset/tskschedule.stp: generic task scheduler tapsets from LKET
	* tapset/process.stp:     changes to process.exec alias


2006-05-16  David Smith  <dsmith@redhat.com>

	* conversions.stp (hexstring, string): Removed functions.  Because
	of parser changes, "string" is now a reserved word and cannot be a
	function name.  Use 'sprintf("0x%x", num)' to replace hexstring()
	and either 'sprint(num)' or 'sprintf("%d", num)' to replace
	string().

	* syscalls.stp (syscall.accept, syscall.alarm, syscall.close,
	syscall.dup, syscall.epoll_create, syscall.exit, syscall.fchdir,
	syscall.fdatasync, syscall.fsync, syscall.getsid) Changed
	'string()' calls to 'sprint()' calls.
	* syscalls2.stp (syscall.sched_get_priority_max,
	syscall.sched_get_priority_min, syscall.sched_getscheduler,
	syscall.setfsgid, syscall.setfsgid16, syscall.setfsuid,
	syscall.setfsuid16, syscall.setgid, syscall.setgid16,
	syscall.setuid, syscall.setuid16, syscall.ssetmask,
	syscall.timer_delete, syscall.timer_getoverrun): Ditto.
	* i686/syscalls.stp (syscall.iopl, syscall.rt_sigreturn,
	syscall.sigreturn): Ditto.
	* ppc64/syscalls.stp (syscall.ppc64_personality): Ditto.
	* x86_64/syscalls.stp (kernel.syscall.iopl, kernel.syscall.umask):
	Ditto.

	* test/ctostp.sh: Uses 'sprint()' instead of 'string()' in
	generated systemtap code.

2006-05-14  Martin Hunt  <hunt@redhat.com>

	* aux_syscalls.stp (_sys_open_flag_str): Rewrite in C so it
	is complete and works on different archs.	

2006-05-09  Josh Stone  <joshua.i.stone@intel.com>

	* context.stp (probefunc): remove use of labels
	* task.stp: functions to retrieve task information
	* process.stp: tapset for process-related events

2006-05-08  Josh Stone  <joshua.i.stone@intel.com>

	PR 2594
	From Thang P Nguyen <thang.p.nguyen@intel.com>
	* context.stp (probefunc): expands ability to detect the function
	for different types of probes.

2006-05-05  Frank Ch. Eigler  <fche@elastic.org>

	PR 2643
	* syscalls.stp: Put back some dummy syscall.exit*.return probes.

2006-05-03  Frank Ch. Eigler  <fche@elastic.org>

	* context.stp, errno.stp: Note/eliminate some retval() duplication.

2006-04-27  Martin Hunt  <hunt@redhat.com>

	* endian.stp (set_endian): Remove "pure" to prevent
	this from optimizing away.

2006-04-21  Frank Ch. Eigler  <fche@elastic.org>

	* aux_syscalls.stp (_fildes_u): Declare return value type.

2006-04-18  Frank Ch. Eigler  <fche@elastic.org>

	* conversions.stp (string, hex_string): Use snprintf for safety.

2006-04-18  Martin Hunt  <hunt@redhat.com>

	* conversions.stp (user_string): Reenable error message.

2006-04-17  Martin Hunt  <hunt@redhat.com>

	* endian.stp (set_endian): New function.

2006-03-06  Martin Hunt  <hunt@redhat.com>

	* system.stp: New tapset. 

2006-03-01  Martin Hunt  <hunt@redhat.com>

	* aux_syscalls.stp (_struct_sockaddr_u): Parse sockaddr. 

	* syscalls.stp (bind): Call _struct_sockaddr_u().

	* errno.stp (errno_str): Complete rewrite in C for speed and
	accuracy.
	(returnstr): New function for syscall tapet.
	
2006-02-22  Frank Ch. Eigler  <fche@elastic.org>

	* timestamp.stp (get_cycles): New function.

2006-02-21  Martin Hunt  <hunt@redhat.com>

	* context.stp: Fix definition of returnval(). Now the same as retval().
	Cleanup needed. Only one can survive.

2006-02-17  Frank Ch. Eigler  <fche@elastic.org>

	* context.stp (cpu): Clone undocumented cpuid() function.

2006-02-14  Martin Hunt  <hunt@redhat.com>

	* syscalls.stp: More updates.

2006-02-14  Frank Ch. Eigler  <fche@elastic.org>

	* queue_stats.stp: New tapset.

2006-02-14  Mark McLoughlin  <markmc@redhat.com>

	* aux_syscalls.stp: (_sys_open_flag_str): s/O_NDCTTY/O_NOCTTY/

2006-02-14  Martin Hunt  <hunt@redhat.com>

	* aux_syscalls.stp (_struct_timeval_u): New function.
	(_struct_timeval): New function.
	(_struct_timespec_u): New function.
	(_struct_timespec): New function.	
	(_struct_itimerval_u): New function:
	(_struct_itimerval): New function:	
	(_signal_name): New function.
	(_module_flags_str): Fixed.

	* syscalls2.stp (syscall.setitimer): Use new function
	_struct_itimerval_u().

	* syscalls.stp: Latest version. Many changes.
	
2006-02-08  Martin Hunt  <hunt@redhat.com>

	* aux_syscalls.stp(_msync_flag_str): Fix.
	(_wait_opt_str): Fix.
	* syscalls.stp: Latest.
	
2006-02-07  Martin Hunt  <hunt@redhat.com>

	* syscalls.stp: Latest.
	* syscalls2.stp: Commented out pciconfig calls. Those
	need to go in arch-specific directories.

	* aux_syscalls.stp (_access_mode_str): Fix.
	(_mmap_flags): New Function.
	(_mprotect_prot_str): Fix.
	(__string): New.
	(__get_argv): New.
	(__fork_flags): New.

2006-02-01  Martin Hunt  <hunt@redhat.com>

	* syscalls.stp: New syscall file.
	* syscall2.stp: More syscalls.
	* i686/syscalls.stp: x86-specific calls.
	* x86_64/syscalls.stp: x86_64-specific calls.

2006-01-30  Martin Hunt  <hunt@redhat.com>

	* context.stp (probefunc): New function.
	(is_return): New function.
	(returnval): New function.

2006-01-15  Frank Ch. Eigler  <fche@elastic.org>

	* logging.stp: Revert.

2006-01-10  Martin Hunt  <hunt@redhat.com>

	* logging.stp: Don't set STAP_SESSION_STOPPING.
	That it done in _stp_exit().

