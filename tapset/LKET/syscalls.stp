// Copyright (C) 2005, 2006 IBM Corp.
//
// This file is part of systemtap, and is free software.  You can
// redistribute it and/or modify it under the terms of the GNU General
// Public License (GPL); either version 2, or (at your option) any
// later version.

probe addevent.syscall
	= addevent.syscall.entry, addevent.syscall.return
{
}

/* log the system call name */
function log_syscall_tracedata(var_id:long, name:string, backtrace:long)
%{
	if(THIS->backtrace == 1)  {
                String str = _stp_string_init (0);
                _stp_stack_sprint (str, CONTEXT->regs, 0);

		_lket_trace(_GROUP_SYSCALL, THIS->var_id, "%0s%0s", THIS->name, _stp_string_ptr(str)); 
	}  else  {
		_lket_trace(_GROUP_SYSCALL, THIS->var_id, "%0s", THIS->name); 
	}
%}


probe addevent.syscall.entry
	+= syscall.*
{
	if(filter_by_pid() == 1 ) {
		log_syscall_tracedata(HOOKID_SYSCALL_ENTRY, name, backtrace)
	}
}

probe addevent.syscall.return
	+= syscall.*.return
{
	if(filter_by_pid() == 1 ) {
		log_syscall_tracedata(HOOKID_SYSCALL_RETURN, name, backtrace)
	}
}
